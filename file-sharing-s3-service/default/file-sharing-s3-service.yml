server:
#  port: 8001
  port: ${S3_SERVICE_PORT}
  servlet:
    context-path: ${SERVER_PATH}


eureka:
  instance:
    # Регистрировать ip-адрес службы вместо имени хоста
    preferIpAddress: true

  client:
    # по умолчанию: true
    registerWithEureka: true
    # Клиент будет хешировать реестр локально и использовать его для вызова других служб, вместо обращения к Eureka
    # Каждые 30 с. клиент будет повторно связываться с Eureka и обновлять свою копию реестра
    # по умолчанию: true
    fetchRegistry: true
    serviceUrl:
      # список экземляров сервисов Eureka, которые клиент может использовать для обнаружения служб  
      defaultZone: '${EUREKA_SERVER_URI}' 


spring:
  cloud:
    loadbalancer.ribbon.enabled: false

  servlet:
    multipart:
      enabled: true
      # по умолчанию 10 мб
      max-file-size: '${MAX_FILE_SIZE:10MB}'
      max-request-size: '${MAX_REQUEST_SIZE:10MB}'

  security.oauth2.resourceserver:
    jwt:
      issuer-uri: 'http://localhost:${KEYCLOAK_PORT}/realms/filesharingservice-realm'


springdoc:
  swagger-ui:
    enabled: true
    path: ${SWAGGER_UI_PATH}


minio:
#  access-key: CLOOXK6dI6hmSYZ3VL8f
  access-key: ${MINIO_ACCESS_KEY}
#  secret-key: sOaJV7iqiTaeA0QPNYY9ykN5tgUZknIr543lheZZ
  secret-key: ${MINIO_SECRET_KEY}
#  url: http://localhost:9000
  url: ${MINIO_URI}

  region: ${MINIO_REGION}
  bucket: ${MINIO_BUCKET:uploaded-files}

logging:
  level:
    ru.manannikov.filesharingservice.s3: DEBUG

# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"

  endpoint:
    health:
      show-details: always